{"ast":null,"code":"var _jsxFileName = \"/Users/RynoMeiboom/Documents/Wincacademy/Week6/W6-Eindopdracht/W6-Eindopdracht/src/containers/AllStudentsGraph.js\";\nimport React from 'react';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryGroup } from 'victory';\nimport Data from '../components/Data/Data';\n\nclass AllStudentsGraph extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      dificulty: {\n        data: {\n          fill: 'red',\n          visibility: 'visible'\n        }\n      },\n      // naast de fill ook visibility gebruiken. visible or hidden.\n      enjoyability: {\n        data: {\n          fill: 'green',\n          visibility: 'visible'\n        }\n      }\n    };\n  }\n\n  render() {\n    const projectNames = Data.map(item => item.project); //to only get the names of the projects\n    // console.log('projectNames', projectNames);\n\n    const uniqueprojectNames = projectNames.filter((name, index, names) => {\n      // Om dubbele namen er uit te filteren\n      return names.indexOf(name) === index;\n    }); // console.log('uniqueprojectNames', uniqueprojectNames);\n\n    const projectAverages = uniqueprojectNames.map(name => {\n      const projectValues = Data.filter(item => item.project === name);\n      const dificultyAverage = projectValues.reduce((prev, curr) => prev + curr.dificulty, 0) / projectValues.length; //To calculate average of dificulty\n\n      const enjoyabilityAverage = projectValues.reduce((prev, curr) => prev + curr.enjoyability, 0) / projectValues.length; //To calculate the average of enjoyability\n\n      return {\n        project: name,\n        dificultyAverage: dificultyAverage,\n        enjoyabilityAverage: enjoyabilityAverage\n      };\n    }); // Waarde om mee te geven aan de VictoryBar:\n    // console.log(projectAverages); //checking to see if the right info is being returned\n\n    const dificultyChange = e => {\n      if (e.target.checked) {\n        // console.log('Checked');\n        this.setState({\n          enjoyability: {\n            data: {\n              fill: 'red',\n              visibility: 'hidden'\n            }\n          }\n        });\n      } else {\n        this.setState({\n          enjoyability: {\n            data: {\n              fill: 'red',\n              visibility: 'visible'\n            }\n          }\n        });\n      }\n    };\n\n    const enjoyabiltyChange = e => {\n      if (e.target.checked) {\n        // console.log('Checked');\n        this.setState({\n          dificulty: {\n            data: {\n              fill: 'green',\n              visibility: 'hidden'\n            }\n          }\n        });\n      } else {\n        this.setState({\n          dificulty: {\n            data: {\n              fill: 'green',\n              visibility: 'visible'\n            }\n          }\n        });\n      }\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"filter\",\n      value: \"dificulty\",\n      onChange: dificultyChange,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \"Difficulty\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"filter\",\n      value: \"enjoyability\",\n      onChange: enjoyabiltyChange,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"Enjoyability\"), React.createElement(\"h3\", {\n      style: {\n        textAlign: 'center',\n        color: 'raisinblack'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"All Students Average\"), React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      domainPadding: 20,\n      width: 5000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(VictoryGroup, {\n      offset: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      style: this.state.dificulty,\n      data: projectAverages,\n      x: \"project\",\n      y: \"dificultyAverage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(VictoryBar, {\n      style: this.state.enjoyability,\n      data: projectAverages,\n      x: \"project\",\n      y: \"enjoyabilityAverage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default AllStudentsGraph;","map":{"version":3,"sources":["/Users/RynoMeiboom/Documents/Wincacademy/Week6/W6-Eindopdracht/W6-Eindopdracht/src/containers/AllStudentsGraph.js"],"names":["React","VictoryBar","VictoryChart","VictoryAxis","VictoryTheme","VictoryGroup","Data","AllStudentsGraph","Component","constructor","state","dificulty","data","fill","visibility","enjoyability","render","projectNames","map","item","project","uniqueprojectNames","filter","name","index","names","indexOf","projectAverages","projectValues","dificultyAverage","reduce","prev","curr","length","enjoyabilityAverage","dificultyChange","e","target","checked","setState","enjoyabiltyChange","textAlign","color","material"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryGroup } from 'victory';\nimport Data from '../components/Data/Data';\n\nclass AllStudentsGraph extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdificulty: {\n\t\t\t\tdata: { fill: 'red', visibility: 'visible' }\n\t\t\t},\n\t\t\t// naast de fill ook visibility gebruiken. visible or hidden.\n\t\t\tenjoyability: {\n\t\t\t\tdata: { fill: 'green', visibility: 'visible' }\n\t\t\t}\n\t\t};\n\t}\n\n\trender() {\n\t\tconst projectNames = Data.map((item) => item.project); //to only get the names of the projects\n\t\t// console.log('projectNames', projectNames);\n\n\t\tconst uniqueprojectNames = projectNames.filter((name, index, names) => {\n\t\t\t// Om dubbele namen er uit te filteren\n\t\t\treturn names.indexOf(name) === index;\n\t\t});\n\t\t// console.log('uniqueprojectNames', uniqueprojectNames);\n\n\t\tconst projectAverages = uniqueprojectNames.map((name) => {\n\t\t\tconst projectValues = Data.filter((item) => item.project === name);\n\t\t\tconst dificultyAverage =\n\t\t\t\tprojectValues.reduce((prev, curr) => prev + curr.dificulty, 0) / projectValues.length; //To calculate average of dificulty\n\t\t\tconst enjoyabilityAverage =\n\t\t\t\tprojectValues.reduce((prev, curr) => prev + curr.enjoyability, 0) / projectValues.length; //To calculate the average of enjoyability\n\t\t\treturn {\n\t\t\t\tproject: name,\n\t\t\t\tdificultyAverage: dificultyAverage,\n\t\t\t\tenjoyabilityAverage: enjoyabilityAverage\n\t\t\t};\n\t\t});\n\t\t// Waarde om mee te geven aan de VictoryBar:\n\t\t// console.log(projectAverages); //checking to see if the right info is being returned\n\n\t\tconst dificultyChange = (e) => {\n\t\t\tif (e.target.checked) {\n\t\t\t\t// console.log('Checked');\n\t\t\t\tthis.setState({\n\t\t\t\t\tenjoyability: {\n\t\t\t\t\t\tdata: { fill: 'red', visibility: 'hidden' }\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tenjoyability: {\n\t\t\t\t\t\tdata: { fill: 'red', visibility: 'visible' }\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst enjoyabiltyChange = (e) => {\n\t\t\tif (e.target.checked) {\n\t\t\t\t// console.log('Checked');\n\t\t\t\tthis.setState({\n\t\t\t\t\tdificulty: {\n\t\t\t\t\t\tdata: { fill: 'green', visibility: 'hidden' }\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdificulty: {\n\t\t\t\t\t\tdata: { fill: 'green', visibility: 'visible' }\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname=\"filter\"\n\t\t\t\t\t\tvalue=\"dificulty\"\n\t\t\t\t\t\tonChange={dificultyChange}\n\t\t\t\t\t\tstyle={{ textAlign: 'center' }}\n\t\t\t\t\t/>\n\t\t\t\t\tDifficulty\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname=\"filter\"\n\t\t\t\t\t\tvalue=\"enjoyability\"\n\t\t\t\t\t\tonChange={enjoyabiltyChange}\n\t\t\t\t\t\tstyle={{ textAlign: 'center' }}\n\t\t\t\t\t/>\n\t\t\t\t\tEnjoyability\n\t\t\t\t</label>\n\t\t\t\t<h3 style={{ textAlign: 'center', color: 'raisinblack' }}>All Students Average</h3>\n\t\t\t\t<VictoryChart theme={VictoryTheme.material} domainPadding={20} width={5000}>\n\t\t\t\t\t<VictoryGroup offset={15}>\n\t\t\t\t\t\t<VictoryBar\n\t\t\t\t\t\t\tstyle={this.state.dificulty}\n\t\t\t\t\t\t\tdata={projectAverages}\n\t\t\t\t\t\t\tx=\"project\"\n\t\t\t\t\t\t\ty=\"dificultyAverage\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VictoryBar\n\t\t\t\t\t\t\tstyle={this.state.enjoyability}\n\t\t\t\t\t\t\tdata={projectAverages}\n\t\t\t\t\t\t\tx=\"project\"\n\t\t\t\t\t\t\ty=\"enjoyabilityAverage\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</VictoryGroup>\n\t\t\t\t</VictoryChart>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AllStudentsGraph;\n"]},"metadata":{},"sourceType":"module"}