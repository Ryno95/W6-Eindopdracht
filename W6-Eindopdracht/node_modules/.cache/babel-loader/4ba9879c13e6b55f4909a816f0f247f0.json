{"ast":null,"code":"var _jsxFileName = \"/Users/RynoMeiboom/Documents/Wincacademy/Week6/W6-Eindopdracht/W6-Eindopdracht/src/containers/AllStudentsGraph.js\";\nimport React from 'react';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryGroup } from 'victory';\nimport Data from '../components/Data/Data';\n\nclass AllStudentsGraph extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      dificult: {\n        data: {\n          fill: '#81ECEC',\n          visibility: 'visible'\n        }\n      },\n      // naast de fill ook visibility gebruiken. visible or hidden.\n      enjoyability: {\n        data: {\n          fill: '#FAB1A0',\n          visibility: 'visible'\n        }\n      }\n    };\n  }\n\n  render() {\n    const projectNames = Data.map(item => item.project); //to only get the names of the projects\n    // console.log('projectNames', projectNames);\n\n    const uniqueprojectNames = projectNames.filter((name, index, names) => {\n      // Om dubbele namen er uit te filteren\n      return names.indexOf(name) === index;\n    }); // console.log('uniqueprojectNames', uniqueprojectNames);\n\n    const projectAverages = uniqueprojectNames.map(name => {\n      const projectValues = Data.filter(item => item.project === name);\n      const dificultyAverage = projectValues.reduce((prev, curr) => prev + curr.dificulty, 0) / projectValues.length; //To calculate average of dificulty\n\n      const enjoyabilityAverage = projectValues.reduce((prev, curr) => prev + curr.enjoyability, 0) / projectValues.length; //To calculate the average of enjoyability\n\n      return {\n        project: name,\n        dificultyAverage: dificultyAverage,\n        enjoyabilityAverage: enjoyabilityAverage\n      };\n    }); // Waarde om mee te geven aan de VictoryBar:\n    // console.log(projectAverages); //checking to see if the right info is being returned\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        textAlign: 'center',\n        color: 'raisinblack'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"All Students Average\"), React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      domainPadding: 20,\n      width: 5000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(VictoryGroup, {\n      offset: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      style: this.state.dificulty,\n      data: projectAverages,\n      x: \"project\",\n      y: \"dificultyAverage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(VictoryBar, {\n      style: this.state.enjoyability,\n      data: projectAverages,\n      x: \"project\",\n      y: \"enjoyabilityAverage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default AllStudentsGraph;","map":{"version":3,"sources":["/Users/RynoMeiboom/Documents/Wincacademy/Week6/W6-Eindopdracht/W6-Eindopdracht/src/containers/AllStudentsGraph.js"],"names":["React","VictoryBar","VictoryChart","VictoryAxis","VictoryTheme","VictoryGroup","Data","AllStudentsGraph","Component","constructor","state","dificult","data","fill","visibility","enjoyability","render","projectNames","map","item","project","uniqueprojectNames","filter","name","index","names","indexOf","projectAverages","projectValues","dificultyAverage","reduce","prev","curr","dificulty","length","enjoyabilityAverage","textAlign","color","material"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryGroup } from 'victory';\nimport Data from '../components/Data/Data';\n\nclass AllStudentsGraph extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdificult: {\n\t\t\t\tdata: { fill: '#81ECEC', visibility: 'visible' }\n\t\t\t},\n\t\t\t// naast de fill ook visibility gebruiken. visible or hidden.\n\t\t\tenjoyability: {\n\t\t\t\tdata: { fill: '#FAB1A0', visibility: 'visible' }\n\t\t\t}\n\t\t};\n\t}\n\n\trender() {\n\t\tconst projectNames = Data.map((item) => item.project); //to only get the names of the projects\n\t\t// console.log('projectNames', projectNames);\n\n\t\tconst uniqueprojectNames = projectNames.filter((name, index, names) => {\n\t\t\t// Om dubbele namen er uit te filteren\n\t\t\treturn names.indexOf(name) === index;\n\t\t});\n\t\t// console.log('uniqueprojectNames', uniqueprojectNames);\n\n\t\tconst projectAverages = uniqueprojectNames.map((name) => {\n\t\t\tconst projectValues = Data.filter((item) => item.project === name);\n\t\t\tconst dificultyAverage =\n\t\t\t\tprojectValues.reduce((prev, curr) => prev + curr.dificulty, 0) / projectValues.length; //To calculate average of dificulty\n\t\t\tconst enjoyabilityAverage =\n\t\t\t\tprojectValues.reduce((prev, curr) => prev + curr.enjoyability, 0) / projectValues.length; //To calculate the average of enjoyability\n\t\t\treturn {\n\t\t\t\tproject: name,\n\t\t\t\tdificultyAverage: dificultyAverage,\n\t\t\t\tenjoyabilityAverage: enjoyabilityAverage\n\t\t\t};\n\t\t});\n\t\t// Waarde om mee te geven aan de VictoryBar:\n\t\t// console.log(projectAverages); //checking to see if the right info is being returned\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3 style={{ textAlign: 'center', color: 'raisinblack' }}>All Students Average</h3>\n\t\t\t\t<VictoryChart theme={VictoryTheme.material} domainPadding={20} width={5000}>\n\t\t\t\t\t<VictoryGroup offset={15}>\n\t\t\t\t\t\t<VictoryBar\n\t\t\t\t\t\t\tstyle={this.state.dificulty}\n\t\t\t\t\t\t\tdata={projectAverages}\n\t\t\t\t\t\t\tx=\"project\"\n\t\t\t\t\t\t\ty=\"dificultyAverage\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VictoryBar\n\t\t\t\t\t\t\tstyle={this.state.enjoyability}\n\t\t\t\t\t\t\tdata={projectAverages}\n\t\t\t\t\t\t\tx=\"project\"\n\t\t\t\t\t\t\ty=\"enjoyabilityAverage\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</VictoryGroup>\n\t\t\t\t</VictoryChart>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AllStudentsGraph;\n"]},"metadata":{},"sourceType":"module"}