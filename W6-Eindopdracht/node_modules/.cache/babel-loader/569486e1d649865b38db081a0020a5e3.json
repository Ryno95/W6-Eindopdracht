{"ast":null,"code":"var _jsxFileName = \"/Users/RynoMeiboom/Documents/Wincacademy/Week6/W6-Eindopdracht/W6-Eindopdracht/src/containers/AllStudentsGraph.js\";\nimport React from 'react';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip, VictoryLine, VictoryGroup } from 'victory';\n\nconst AllStudentsGraph = props => {\n  console.log('props.data', props.data);\n  const projectNames = props.data.map(item => item.project); //to only get the names of the projects\n  // console.log('projectNames', projectNames);\n\n  const uniqueprojectNames = projectNames.filter((name, index, names) => {\n    // Om dubbele namen er uit te filteren\n    return names.indexOf(name) === index;\n  }); // console.log('uniqueprojectNames', uniqueprojectNames);\n\n  const projectAverages = uniqueprojectNames.map(name => {\n    const projectValues = props.data.filter(item => item.project === name);\n    const dificultyAverage = projectValues.reduce((prev, curr) => prev + curr.dificulty, 0) / projectValues.length; //To calculate average of dificulty\n\n    const enjoyabilityAverage = projectValues.reduce((prev, curr) => prev + curr.enjoyability, 0) / projectValues.length; //To calculate the average of enjoyability\n\n    return {\n      project: name,\n      dificultyAverage: dificultyAverage,\n      enjoyabilityAverage: enjoyabilityAverage\n    };\n  }); // Waarde om mee te geven aan de VictoryBar:\n  // console.log(projectAverages); //checking to see if the right info is being returned\n\n  return React.createElement(VictoryChart, {\n    domainPadding: 20,\n    width: 5000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(VictoryGroup, {\n    offset: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(VictoryBar, {\n    data: projectAverages,\n    x: \"project\",\n    y: \"dificultyAverage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(VictoryBar, {\n    data: projectAverages,\n    x: \"project\",\n    y: \"enjoyabilityAverage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nexport default AllStudentsGraph;","map":{"version":3,"sources":["/Users/RynoMeiboom/Documents/Wincacademy/Week6/W6-Eindopdracht/W6-Eindopdracht/src/containers/AllStudentsGraph.js"],"names":["React","VictoryBar","VictoryChart","VictoryAxis","VictoryTooltip","VictoryLine","VictoryGroup","AllStudentsGraph","props","console","log","data","projectNames","map","item","project","uniqueprojectNames","filter","name","index","names","indexOf","projectAverages","projectValues","dificultyAverage","reduce","prev","curr","dificulty","length","enjoyabilityAverage","enjoyability"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,WAAnC,EAAgDC,cAAhD,EAAgEC,WAAhE,EAA6EC,YAA7E,QAAiG,SAAjG;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAAK,CAACG,IAAhC;AAEA,QAAMC,YAAY,GAAGJ,KAAK,CAACG,IAAN,CAAWE,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACC,OAA9B,CAArB,CAHmC,CAG0B;AAC7D;;AAEA,QAAMC,kBAAkB,GAAGJ,YAAY,CAACK,MAAb,CAAoB,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,KAAwB;AACtE;AACA,WAAOA,KAAK,CAACC,OAAN,CAAcH,IAAd,MAAwBC,KAA/B;AACA,GAH0B,CAA3B,CANmC,CAUnC;;AAEA,QAAMG,eAAe,GAAGN,kBAAkB,CAACH,GAAnB,CAAwBK,IAAD,IAAU;AACxD,UAAMK,aAAa,GAAGf,KAAK,CAACG,IAAN,CAAWM,MAAX,CAAmBH,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBG,IAA7C,CAAtB;AACA,UAAMM,gBAAgB,GAAGD,aAAa,CAACE,MAAd,CAAqB,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,GAAGC,IAAI,CAACC,SAAjD,EAA4D,CAA5D,IAAiEL,aAAa,CAACM,MAAxG,CAFwD,CAEwD;;AAChH,UAAMC,mBAAmB,GACxBP,aAAa,CAACE,MAAd,CAAqB,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,GAAGC,IAAI,CAACI,YAAjD,EAA+D,CAA/D,IAAoER,aAAa,CAACM,MADnF,CAHwD,CAImC;;AAC3F,WAAO;AACNd,MAAAA,OAAO,EAAEG,IADH;AAENM,MAAAA,gBAAgB,EAAEA,gBAFZ;AAGNM,MAAAA,mBAAmB,EAAEA;AAHf,KAAP;AAKA,GAVuB,CAAxB,CAZmC,CAuBnC;AACA;;AAEA,SACC,oBAAC,YAAD;AAAc,IAAA,aAAa,EAAE,EAA7B;AAAiC,IAAA,KAAK,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAER,eAAlB;AAAmC,IAAA,CAAC,EAAC,SAArC;AAA+C,IAAA,CAAC,EAAC,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,eAAlB;AAAmC,IAAA,CAAC,EAAC,SAArC;AAA+C,IAAA,CAAC,EAAC,qBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,CADD;AAQA,CAlCD;;AAoCA,eAAef,gBAAf","sourcesContent":["import React from 'react';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip, VictoryLine, VictoryGroup } from 'victory';\n\nconst AllStudentsGraph = (props) => {\n\tconsole.log('props.data', props.data);\n\n\tconst projectNames = props.data.map((item) => item.project); //to only get the names of the projects\n\t// console.log('projectNames', projectNames);\n\n\tconst uniqueprojectNames = projectNames.filter((name, index, names) => {\n\t\t// Om dubbele namen er uit te filteren\n\t\treturn names.indexOf(name) === index;\n\t});\n\t// console.log('uniqueprojectNames', uniqueprojectNames);\n\n\tconst projectAverages = uniqueprojectNames.map((name) => {\n\t\tconst projectValues = props.data.filter((item) => item.project === name);\n\t\tconst dificultyAverage = projectValues.reduce((prev, curr) => prev + curr.dificulty, 0) / projectValues.length; //To calculate average of dificulty\n\t\tconst enjoyabilityAverage =\n\t\t\tprojectValues.reduce((prev, curr) => prev + curr.enjoyability, 0) / projectValues.length; //To calculate the average of enjoyability\n\t\treturn {\n\t\t\tproject: name,\n\t\t\tdificultyAverage: dificultyAverage,\n\t\t\tenjoyabilityAverage: enjoyabilityAverage\n\t\t};\n\t});\n\t// Waarde om mee te geven aan de VictoryBar:\n\t// console.log(projectAverages); //checking to see if the right info is being returned\n\n\treturn (\n\t\t<VictoryChart domainPadding={20} width={5000}>\n\t\t\t<VictoryGroup offset={15}>\n\t\t\t\t<VictoryBar data={projectAverages} x=\"project\" y=\"dificultyAverage\" />\n\t\t\t\t<VictoryBar data={projectAverages} x=\"project\" y=\"enjoyabilityAverage\" />\n\t\t\t</VictoryGroup>\n\t\t</VictoryChart>\n\t);\n};\n\nexport default AllStudentsGraph;\n"]},"metadata":{},"sourceType":"module"}